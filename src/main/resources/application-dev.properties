

spring.application.name=opticsmanager


# Docker-aware MySQL Configuration
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/opticsmanagerdb}
spring.datasource.username=root
spring.datasource.password=manal
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


# JWT Properties
app.jwtSecret=6IhYVtX6VbZ6VFCswqN4Q+hkhC3B5xQNZ6Ku85qFIpn7uL9akv/9rMkCk2xTaf86c+76cYkQ91TQmMY7ZbBVEUg==
app.jwtExpirationMs=86400000

# Configuration pour éviter les erreurs de sérialisation Hibernate
spring.jackson.serialization.fail-on-empty-beans=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Configuration Jackson pour Hibernate
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.default-property-inclusion=NON_NULL

# File upload settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# Directory to store uploaded files
app.upload.dir=uploads/images

